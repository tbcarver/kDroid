{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/animation.view.js","webpack:///./app/app.controller.js","webpack:///./app/appState.js","webpack:///./app/messageBox.controller.js","webpack:///./app/messageBox.threadedView.js","webpack:///./app/messageBox.view.js","webpack:///./app/robot.controller.js","webpack:///./app/robot.threadedView.js","webpack:///./app/robot.view.js","webpack:///./app/robotIcons.js","webpack:///./app/viewFactory.js","webpack:///./app/world.controller.js","webpack:///./app/world.threadedView.js","webpack:///./app/world.view.js","webpack:///./appCommandsThreaded.js","webpack:///./lib/core-vendor/web-animation-js/web-animation-extensions.js","webpack:///./lib/core/collections/double-key-hash-set.js","webpack:///./lib/core/extensions/core-math.js","webpack:///./lib/core/extensions/core-object.js","webpack:///./lib/core/extensions/core-string.js","webpack:///./lib/core/web/dom.js"],"names":[],"mappings":"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CA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,SAAS,+CAA+C;AACxD,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,gEAAa;AACjB;;;;;;;;;;;;;;;;;;;;ACtFyC;AACM;;AAE/C;AACA;;AAEA,iBAAiB,qDAAQ;AACzB,iBAAiB,qDAAQ;;AAEzB;;AAEA;;AAEA;;AAEA,gBAAgB,2DAAW;AAC3B,gBAAgB,2DAAW;;AAE3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,eAAe;AACf;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,eAAe;AACf;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACrJA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;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","file":"kDroid.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./appCommandsThreaded.js\");\n","\r\nimport { webAnimationExtensions } from \"../lib/core-vendor/web-animation-js/web-animation-extensions.js\";\r\n\r\nvar animationView = {\r\n\tcurrentEndTime: 0\r\n};\r\n\r\nanimationView.stackAnimation = function(element, keyFrames, options, onFinishHandler) {\r\n\r\n\twebAnimationExtensions.getTimelineCurrentTime(function(currentTime) {\r\n\r\n\t\tvar delay = 0;\r\n\r\n\t\tif (this.currentEndTime === 0) {\r\n\r\n\t\t\tvar delay = currentTime;\r\n\r\n\t\t} else if (currentTime < this.currentEndTime) {\r\n\r\n\t\t\tdelay = this.currentEndTime - currentTime;\r\n\t\t}\r\n\r\n\t\toptions.delay = delay;\r\n\r\n\t\telement.animate(keyFrames, options).onfinish = onFinishHandler;\r\n\t\t\r\n\t\tthis.currentEndTime = delay + options.duration + currentTime;\r\n\r\n\t}.bind(this));\r\n}\r\n\r\n\r\nexport { animationView }","\r\nimport { worldController } from \"./world.controller.js\";\r\nimport { robotController } from \"./robot.controller.js\";\r\nimport { messageBoxController } from \"./messageBox.controller.js\";\r\nimport { viewFactory } from \"./viewFactory.js\";\r\nimport { robotIcons } from \"./robotIcons.js\";\r\nimport { appState } from \"./appState.js\";\r\nimport { coreMath } from \"../lib/core/extensions/core-math.js\"\r\nimport { DoubleKeyHashSet } from \"../lib/core/collections/double-key-hash-set.js\";\r\n\r\nvar worldState = appState.world;\r\nvar robotState = appState.robot;\r\n\r\nvar appController = {};\r\n\r\nappController.load = function() {\r\n\r\n\tinitializeColors(worldState);\r\n\tinitializeOuterWalls(worldState);\r\n\tinitializeTilesCounts(worldState);\r\n\r\n\tworldController.load();\r\n\trobotController.load();\r\n\tmessageBoxController.load();\r\n}\r\n\r\nappController.loadThreaded = function() {\r\n\t\r\n\tviewFactory.loadThreaded();\r\n\r\n\tthis.load();\r\n}\r\n\r\nappController.setWorldStateSize = function(rowsCount, columnsCount) {\r\n\r\n\tworldState.rowsCount = rowsCount;\r\n\tworldState.columnsCount = rowsCount;\r\n\r\n\tif (columnsCount) {\r\n\r\n\t\tworldState.columnsCount = columnsCount;\r\n\t}\r\n}\r\n\r\nappController.setRandomWorldStateSize = function(rowsCount, columnsCount) {\r\n\r\n\tvar randomRowsCount = coreMath.randomInteger(1, 12);\r\n\tvar randomColumnsCount = coreMath.randomInteger(1, 12);\r\n\r\n\tif (rowsCount) {\r\n\r\n\t\tif (rowsCount !== -1) {\r\n\r\n\t\t\trandomRowsCount = rowsCount;\r\n\r\n\t\t\tif (!columnsCount) {\r\n\r\n\t\t\t\trandomColumnsCount = rowsCount;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (columnsCount) {\r\n\r\n\t\tif (columnsCount !== -1) {\r\n\r\n\t\t\trandomColumnsCount = columnsCount;\r\n\t\t}\r\n\t}\r\n\r\n\tworldState.rowsCount = randomRowsCount;\r\n\tworldState.columnsCount = randomColumnsCount;\r\n}\r\n\r\n/**\r\n * Speed of the world\r\n * @param speed 100 for the fastest and 1 for the slowest\r\n */\r\nappController.setWorldStateSpeed = function(speed) {\r\n\r\n\tif (speed < 1) {\r\n\r\n\t\tspeed = 1;\r\n\r\n\t} else if (speed > 100) {\r\n\r\n\t\tspeed = 100;\r\n\t}\r\n\r\n\tvar invertedSpeed = 100 - speed;\r\n\tvar fastestDuration = 10;\r\n\tvar slowestDuration = 2000;\r\n\r\n\tworldState.duration = ((slowestDuration - fastestDuration) * (invertedSpeed / 100)) + fastestDuration;\r\n}\r\n\r\nappController.setRobotStateIconName = function(iconName) {\r\n\r\n\tif (iconName) {\r\n\r\n\t\trobotState.iconName = iconName;\r\n\t}\r\n}\r\n\r\nappController.setRandomRobotStateIconName = function(iconName) {\r\n\r\n\tif (!iconName) {\r\n\r\n\t\tvar keys = Object.keys(robotIcons);\r\n\t\tvar randomIndex = coreMath.randomInteger(0, keys.length - 1);\r\n\t\ticonName = keys[randomIndex];\r\n\t}\r\n\r\n\trobotState.iconName = iconName;\r\n}\r\n\r\nappController.setRobotStateDirection = function(direction) {\r\n\r\n\tif (direction) {\r\n\r\n\t\trobotState.direction = direction;\r\n\t}\r\n}\r\n\r\nvar directions = [\r\n\t\"north\",\r\n\t\"east\",\r\n\t\"south\",\r\n\t\"west\"\r\n]\r\n\r\nappController.setRandomRobotStateDirection = function(direction) {\r\n\r\n\tif (!direction) {\r\n\r\n\t\tvar randomIndex = coreMath.randomInteger(0, directions.length - 1);\r\n\t\tdirection = directions[randomIndex];\r\n\t}\r\n\r\n\trobotState.direction = direction;\r\n}\r\n\r\nappController.setTileBackgroundColor= function(backgroundColor) {\r\n\r\n\tworldState.tileBackgroundColor = backgroundColor;\r\n}\r\n\r\nfunction initializeColors() {\r\n\r\n\tvar randomHue = Math.round(Math.random() * 255);\r\n\tvar complimentaryHue = randomHue + 128;\r\n\t\r\n\tif (randomHue > 128) {\r\n\r\n\t\tcomplimentaryHue = 256 - 128 - randomHue;\r\n\t}\r\n\r\n\trobotState.backgroundColor = \"hsl(\" + complimentaryHue + \", 40%, 35%)\";\r\n\t// worldState.backgroundColor = \"hsl(\" + randomHue + \", 100%, 100%)\";\r\n\tworldState.borderBackgroundColor = \"hsl(\" + randomHue + \", 40%, 90%)\";\r\n\tworldState.wallBackgroundColor = \"hsl(\" + complimentaryHue + \", 50%, 25%)\";\r\n\tworldState.tileBackgroundColor = \"hsl(\" + randomHue + \", 45%, 65%)\";\t\r\n\tworldState.messageBoxBackgroundColor = \"hsl(\" + complimentaryHue + \", 40%, 40%)\";\r\n}\r\n\r\nfunction initializeOuterWalls(worldState) {\r\n\r\n\tvar topWalls = new DoubleKeyHashSet();\r\n\tvar leftWalls = new DoubleKeyHashSet();\r\n\r\n\tfor (var rowIndex = 0; rowIndex < worldState.rowsCount; rowIndex++) {\r\n\r\n\t\tfor (var columnIndex = 0; columnIndex < worldState.columnsCount; columnIndex++) {\r\n\r\n\t\t\tif (rowIndex === 0) {\r\n\r\n\t\t\t\ttopWalls.add(rowIndex, columnIndex);\r\n\t\t\t}\r\n\r\n\t\t\tif (rowIndex === worldState.rowsCount - 1) {\r\n\r\n\t\t\t\ttopWalls.add(rowIndex + 1, columnIndex);\r\n\t\t\t}\r\n\r\n\t\t\tif (columnIndex === 0) {\r\n\r\n\t\t\t\tleftWalls.add(rowIndex, columnIndex);\r\n\t\t\t}\r\n\r\n\t\t\tif (columnIndex === worldState.columnsCount - 1) {\r\n\r\n\t\t\t\tleftWalls.add(rowIndex, columnIndex + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tworldState.topWalls = topWalls;\r\n\tworldState.leftWalls = leftWalls;\r\n}\r\n\r\nfunction initializeTilesCounts(worldState) {\r\n\r\n\tvar tileCounts = [];\r\n\tvar currentRow;\r\n\r\n\tfor (var rowIndex = 0; rowIndex < worldState.rowsCount; rowIndex++) {\r\n\r\n\t\tcurrentRow = [];\r\n\t\ttileCounts.push(currentRow);\r\n\r\n\t\tfor (var columnIndex = 0; columnIndex < worldState.columnsCount; columnIndex++) {\r\n\r\n\t\t\tcurrentRow.push(0);\r\n\t\t}\r\n\t}\r\n\r\n\tworldState.tileCounts = tileCounts;\r\n}\r\n\r\n\r\nexport { appController }","\r\nvar appState = {\r\n    robot: {\r\n        rowIndex: 0,\r\n        columnIndex: 0,\r\n        iconName: \"arrow-alt-circle-right\",\r\n        backgroundColor: \"#fff\",\r\n        direction: \"east\"\r\n    },\r\n    world: {\r\n        rowsCount: 0,\r\n        columnsCount: 0,\r\n        cellSize: 0,\r\n        backgroundColor: \"#fff\",\r\n        borderBackgroundColor: \"#fff\",\r\n        duration: 1000,\r\n        topWalls: {},\r\n        leftWalls: {},\r\n        wallBackgroundColor: \"#fff\",\r\n        tileCounts: [],\r\n        tileColor: \"#fff\",\r\n        tileBackgroundColor: \"#fff\",\r\n        messageBoxBackgroundColor: \"#fff\"\r\n    }\r\n};\r\n\r\n\r\nexport { appState }","\r\nimport { viewFactory } from \"./viewFactory.js\";\r\nimport { appState } from \"./appState.js\";\r\n\r\nvar messageBoxView;\r\n\r\nvar messageBoxController = {};\r\n\r\nmessageBoxController.load = function() {\r\n\r\n    messageBoxView = viewFactory.getView(\"messageBoxView\");\r\n\r\n};\r\n\r\nmessageBoxController.setMessage = function(message, isError) {\r\n\r\n\tmessageBoxView.render(message, isError, appState.world);\r\n};\r\n\r\n\r\nexport { messageBoxController }","\r\n\r\nvar messageBoxThreadedView = {};\r\n\r\nmessageBoxThreadedView.render = function(message, isError, worldState) {\r\n\r\n\tvar message = {\r\n\t\thandler: \"messageBoxView\",\r\n\t\tmethod: \"render\",\r\n\t\tparameters: [\r\n\t\t\tmessage,\r\n\t\t\tisError,\r\n\t\t\tworldState\r\n\t\t]\r\n\t}\r\n\r\n\tself.postMessage(message);\r\n};\r\n\r\n\r\nexport { messageBoxThreadedView }","\r\nimport { dom } from \"../lib/core/web/dom.js\";\r\nimport { animationView } from \"./animation.view.js\";\r\n\r\nvar messageBoxView = {};\r\n\r\nmessageBoxView.render = function(message, isError, worldState) {\r\n\r\n    var messageBoxElement = dom.createElement(\"div\", { id: \"messageBox\" });\r\n    var messageBoxWidth = worldState.cellSize * worldState.columnsCount * .75;\r\n\r\n    if (messageBoxWidth > 450) {\r\n\r\n        messageBoxWidth = 450;\r\n\r\n    } else if (messageBoxWidth < 350) {\r\n\r\n        messageBoxWidth = 350;\r\n    }\r\n\r\n    messageBoxElement.style.width = messageBoxWidth + \"px\";\r\n    messageBoxElement.style.padding = \"30px 20px\";\r\n    messageBoxElement.style.color = worldState.backgroundColor;\r\n    messageBoxElement.style.backgroundColor = worldState.messageBoxBackgroundColor;\r\n    messageBoxElement.style.visibility = \"hidden\";\r\n\r\n    messageBoxElement.style.fontSize = \"28px\";\r\n\r\n    if (messageBoxWidth < 400 || message.length > 40) {\r\n\r\n        messageBoxElement.style.fontSize = \"16px\";\r\n    }\r\n\r\n    messageBoxElement.innerHTML = message;\r\n\r\n    var messageBoxContainerElement = dom.createElement(\"div\", { id: \"messageBoxContainer\" });\r\n    messageBoxContainerElement.appendChild(messageBoxElement);\r\n\r\n    var messageBoxCloseElement = dom.createElement(\"a\", { className: \"closeButton\", href: \"#\" });\r\n    messageBoxCloseElement.style.width = messageBoxElement.style.fontSize;\r\n    messageBoxCloseElement.style.height = messageBoxElement.style.fontSize;\r\n    messageBoxCloseElement.style.fill = worldState.backgroundColor;\r\n    messageBoxCloseElement.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z\"/></svg>';\r\n    messageBoxElement.appendChild(messageBoxCloseElement);\r\n\r\n    var worldPlaceholderElement = dom(\"#worldPlaceholder\");\r\n    worldPlaceholderElement.appendChild(messageBoxContainerElement);\r\n\r\n    messageBoxCloseElement.addEventListener(\"click\", function(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        var keyframes = [\r\n            { transform: \"scale(1)\", visibility: \"visible\" },\r\n            { transform: \"scale(0)\", visibility: \"visible\" }\r\n        ]\r\n\r\n        var options = {\r\n            duration: worldState.duration / 2,\r\n            easing: \"cubic-bezier(.5305, -1.3203, .5, .6085)\",\r\n            fill: \"forwards\"\r\n        }\r\n\r\n        messageBoxContainerElement.animate(keyframes, options);\r\n    });\r\n\r\n    messageBoxContainerElement.style.minWidth = worldPlaceholderElement.offsetWidth + \"px\";\r\n    messageBoxContainerElement.style.minHeight = worldPlaceholderElement.offsetHeight + \"px\";\r\n\r\n    var keyframes = [\r\n        { transform: \"scale(0)\", visibility: \"visible\" },\r\n        { transform: \"scale(1)\", visibility: \"visible\" }\r\n    ];\r\n\r\n    if (isError) {\r\n\r\n         keyframes[0].backgroundColor = messageBoxElement.style.backgroundColor;\r\n         keyframes[1].backgroundColor = \"#bb1414\";\r\n    }\r\n\r\n    var options = {\r\n        duration: worldState.duration / 2,\r\n        easing: \"cubic-bezier(.38, 1.23, .71, 1.82)\",\r\n        fill: \"forwards\"\r\n    };\r\n\r\n    animationView.stackAnimation(messageBoxElement, keyframes, options);\r\n};\r\n\r\n\r\nexport { messageBoxView }","\r\nimport { appState } from \"./appState.js\";\r\nimport { viewFactory } from \"./viewFactory.js\";\r\n\r\nvar robotView;\r\nvar worldView;\r\n\r\nvar robotState = appState.robot;\r\nvar worldState = appState.world;\r\n\r\nvar robotViewMoveHandlers;\r\n\r\nvar robotController = {};\r\n\r\nrobotController.load = function() {\r\n\r\n    robotView = viewFactory.getView(\"robotView\");\r\n    worldView = viewFactory.getView(\"worldView\");\r\n\r\n    robotViewMoveHandlers = {\r\n        north: robotView.moveNorth,\r\n        east: robotView.moveEast,\r\n        south: robotView.moveSouth,\r\n        west: robotView.moveWest\r\n    }\r\n\r\n    robotView.renderRobot(robotState, worldState.cellSize);\r\n};\r\n\r\nvar robotMoveDirectionOffsets = {\r\n    north: {\r\n        rowOffset: -1,\r\n        columnOffset: 0\r\n    },\r\n    east: {\r\n        rowOffset: 0,\r\n        columnOffset: 1\r\n    },\r\n    south: {\r\n        rowOffset: 1,\r\n        columnOffset: 0\r\n    },\r\n    west: {\r\n        rowOffset: 0,\r\n        columnOffset: -1\r\n    }\r\n};\r\n\r\nrobotController.move = function() {\r\n\r\n    assertCanMove();\r\n\r\n    var robotViewMove = robotViewMoveHandlers[robotState.direction].bind(robotView);\r\n\r\n    robotState.rowIndex = robotState.rowIndex + robotMoveDirectionOffsets[robotState.direction].rowOffset;\r\n    robotState.columnIndex = robotState.columnIndex + robotMoveDirectionOffsets[robotState.direction].columnOffset;\r\n\r\n    robotViewMove(worldState.duration, worldState.cellSize);\r\n};\r\n\r\nfunction assertCanMove() {\r\n\r\n    if (robotController.isFrontBlocked()) {\r\n\r\n        throw { message: \"The front is blocked.\" };\r\n    }\r\n}\r\n\r\nrobotController.isFrontClear = function() {\r\n\r\n    return !this.isFrontBlocked();\r\n}\r\n\r\nrobotController.isFrontBlocked = function() {\r\n\r\n    var walls = worldState.topWalls;\r\n\r\n    if (robotState.direction === \"east\" || robotState.direction === \"west\") {\r\n\r\n        walls = worldState.leftWalls;\r\n    }\r\n\r\n    var wallRowIndex = robotState.rowIndex;\r\n    var wallColumnIndex = robotState.columnIndex;\r\n\r\n    if (robotState.direction === \"south\") {\r\n\r\n        wallRowIndex++;\r\n    }\r\n\r\n    if (robotState.direction === \"east\") {\r\n\r\n        wallColumnIndex++;\r\n    }\r\n\r\n    return walls.includesKey(wallRowIndex, wallColumnIndex);\r\n}\r\n\r\nvar turnLeftDirections = {\r\n    north: \"west\",\r\n    east: \"north\",\r\n    south: \"east\",\r\n    west: \"south\"\r\n};\r\n\r\nrobotController.turnLeft = function() {\r\n\r\n    robotState.direction = turnLeftDirections[robotState.direction];\r\n    robotView.turnLeft(robotState.direction, worldState.duration);\r\n};\r\n\r\nrobotController.putDownTile = function() {\r\n\r\n    var tileCount = worldState.tileCounts[robotState.rowIndex][robotState.columnIndex];\r\n    tileCount++;\r\n    worldState.tileCounts[robotState.rowIndex][robotState.columnIndex] = tileCount;\r\n\r\n    worldView.putDownTile(tileCount, robotState, worldState);\r\n}\r\n\r\nrobotController.pickUpTile = function() {\r\n\r\n    var tileCount = worldState.tileCounts[robotState.rowIndex][robotState.columnIndex];\r\n    var previousTileCount = tileCount;\r\n\r\n    assertCanPickUpTile(tileCount);\r\n\r\n    tileCount--;\r\n    worldState.tileCounts[robotState.rowIndex][robotState.columnIndex] = tileCount;\r\n\r\n    worldView.pickUpTile(previousTileCount, robotState, worldState);\r\n}\r\n\r\nfunction assertCanPickUpTile(tileCount) {\r\n\r\n    if (tileCount <= 0) {\r\n\r\n        throw { message: \"There is no tile to pick up.\" };\r\n    }\r\n}\r\n\r\nrobotController.isOnTile = function() {\r\n\r\n    var tileCount = worldState.tileCounts[robotState.rowIndex][robotState.columnIndex];\r\n\r\n    return (tileCount > 0);\r\n}\r\n\r\nrobotController.isNotOnTile = function() {\r\n\r\n    return !this.isOnTile();\r\n}\r\n\r\n\r\nexport { robotController }","\r\n\r\nvar robotThreadedView = {};\r\n\r\nrobotThreadedView.renderRobot = function(robotState, cellSize) {\r\n\r\n\tvar message = {\r\n\t\thandler: \"robotView\",\r\n\t\tmethod: \"renderRobot\",\r\n\t\tparameters: [\r\n\t\t\trobotState,\r\n\t\t\tcellSize\r\n\t\t]\r\n\t}\r\n\r\n\tself.postMessage(message);\r\n}\r\n\r\nrobotThreadedView.moveNorth = function(duration, cellSize) {\r\n\r\n\tvar message = {\r\n\t\thandler: \"robotView\",\r\n\t\tmethod: \"moveNorth\",\r\n\t\tparameters: [\r\n\t\t\tduration,\r\n\t\t\tcellSize\r\n\t\t]\r\n\t}\r\n\r\n\tself.postMessage(message);\r\n}\r\n\r\nrobotThreadedView.moveEast = function(duration, cellSize) {\r\n\r\n\tvar message = {\r\n\t\thandler: \"robotView\",\r\n\t\tmethod: \"moveEast\",\r\n\t\tparameters: [\r\n\t\t\tduration,\r\n\t\t\tcellSize\r\n\t\t]\r\n\t}\r\n\r\n\tself.postMessage(message);\r\n}\r\n\r\nrobotThreadedView.moveSouth = function(duration, cellSize) {\r\n\r\n\tvar message = {\r\n\t\thandler: \"robotView\",\r\n\t\tmethod: \"moveSouth\",\r\n\t\tparameters: [\r\n\t\t\tduration,\r\n\t\t\tcellSize\r\n\t\t]\r\n\t}\r\n\r\n\tself.postMessage(message);\r\n}\r\n\r\nrobotThreadedView.moveWest = function(duration, cellSize) {\r\n\r\n\tvar message = {\r\n\t\thandler: \"robotView\",\r\n\t\tmethod: \"moveWest\",\r\n\t\tparameters: [\r\n\t\t\tduration,\r\n\t\t\tcellSize\r\n\t\t]\r\n\t}\r\n\r\n\tself.postMessage(message);\r\n}\r\n\r\nrobotThreadedView.turnLeft = function(nextDirection, duration) {\r\n\r\n\tvar message = {\r\n\t\thandler: \"robotView\",\r\n\t\tmethod: \"turnLeft\",\r\n\t\tparameters: [\r\n\t\t\tnextDirection,\r\n\t\t\tduration\r\n\t\t]\r\n\t}\r\n\r\n\tself.postMessage(message);\r\n}\r\n\r\n\r\nexport { robotThreadedView }","\r\nimport { dom } from \"../lib/core/web/dom.js\";\r\nimport { animationView } from \"./animation.view.js\";\r\nimport { robotIcons } from \"./robotIcons.js\";\r\nimport { coreString } from \"../lib/core/extensions/core-string.js\";\r\n\r\nvar robotView = {};\r\n\r\nrobotView.renderRobot = function(robotState, cellSize) {\r\n    \r\n    this.robotElement = dom.createElement(\"div\", { id: \"kDroid\" });\r\n    this.robotElement.style.padding = (cellSize * .1) + \"px\";\r\n    this.robotElement.style.fill = robotState.backgroundColor;\r\n\r\n    this.robotElement.innerHTML = robotIcons[robotState.iconName];\r\n\r\n    var worldPlaceholderElement = dom(\"#worldPlaceholder\");\r\n    worldPlaceholderElement.appendChild(this.robotElement);\r\n\r\n    this.robotSvgElement = this.robotElement.querySelector(\"svg\");\r\n\r\n    var top = cellSize * robotState.rowIndex;\r\n    var left = cellSize * robotState.columnIndex;\r\n\r\n    this.robotElement.style.top = top + \"px\";\r\n    this.robotElement.style.left = left + \"px\";\r\n    this.robotElement.style.width = cellSize + \"px\";\r\n    this.robotElement.style.height = cellSize + \"px\";\r\n\r\n    this.robotSvgElement.style.transform = directionRotations[robotState.direction];\r\n}\r\n\r\nrobotView.moveNorth = function(duration, cellSize) {\r\n\r\n    var keyframes = {\r\n        transform: [\r\n            \"translateY(0px)\",\r\n            \"translateY(\" + -cellSize + \"px)\",\r\n        ]\r\n    };\r\n\r\n    move(this.robotElement, keyframes, duration, -cellSize, 0);\r\n}\r\n\r\nrobotView.moveEast = function(duration, cellSize) {\r\n\r\n    var keyframes = {\r\n        transform: [\r\n            \"translateX(0px)\",\r\n            \"translateX(\" + cellSize + \"px)\",\r\n        ]\r\n    };\r\n\r\n    move(this.robotElement, keyframes, duration, 0, cellSize);\r\n}\r\n\r\nrobotView.moveSouth = function(duration, cellSize) {\r\n\r\n    var keyframes = {\r\n        transform: [\r\n            \"translateY(0px)\",\r\n            \"translateY(\" + cellSize + \"px)\",\r\n        ]\r\n    };\r\n\r\n    move(this.robotElement, keyframes, duration, cellSize, 0);\r\n}\r\n\r\nrobotView.moveWest = function(duration, cellSize) {\r\n\r\n    var keyframes = {\r\n        transform: [\r\n            \"translateX(0px)\",\r\n            \"translateX(\" + -cellSize+ \"px)\",\r\n        ]\r\n    };\r\n\r\n    move(this.robotElement, keyframes, duration, 0, -cellSize);\r\n}\r\n\r\nfunction move(element, keyframes, duration, forwardsTopOffset, forwardsLeftOffset) {\r\n\r\n    var options = {\r\n        duration: duration,\r\n        easing: \"ease-in-out\",\r\n    }\r\n\r\n    animationView.stackAnimation(element, keyframes, options, function() {\r\n\r\n        element.style.top = coreString.addNumberInString(element.style.top, forwardsTopOffset);\r\n        element.style.left = coreString.addNumberInString(element.style.left, forwardsLeftOffset);\r\n    });\r\n}\r\n\r\nvar directionRotations = {\r\n    north: \"rotate(-90deg)\",\r\n    east: \"rotate(0deg)\",\r\n    south: \"rotate(-270deg)\",\r\n    west: \"rotate(-180deg)\"\r\n};\r\n\r\nrobotView.turnLeft = function(nextDirection, duration) {\r\n\r\n    var keyframes = {\r\n        transform: [\r\n            \"rotate(0deg)\",\r\n            \"rotate(-90deg)\"\r\n        ]\r\n    };\r\n\r\n    var options = {\r\n        duration: duration / 3,\r\n        easing: \"linear\"\r\n    }\r\n\r\n    var robotSvgElement = this.robotSvgElement;\r\n    var svgRotation = directionRotations[nextDirection];\r\n\r\n    animationView.stackAnimation(this.robotElement, keyframes, options, function() {\r\n\r\n        robotSvgElement.style.transform = svgRotation;\r\n    });\r\n}\r\n\r\n\r\nexport { robotView }","\r\nvar robotIcons = {};\r\n\r\nrobotIcons[\"accessible-icon\"] = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M423.9 255.8L411 413.1c-3.3 40.7-63.9 35.1-60.6-4.9l10-122.5-41.1 2.3c10.1 20.7 15.8 43.9 15.8 68.5 0 41.2-16.1 78.7-42.3 106.5l-39.3-39.3c57.9-63.7 13.1-167.2-74-167.2-25.9 0-49.5 9.9-67.2 26L73 243.2c22-20.7 50.1-35.1 81.4-40.2l75.3-85.7-42.6-24.8-51.6 46c-30 26.8-70.6-18.5-40.5-45.4l68-60.7c9.8-8.8 24.1-10.2 35.5-3.6 0 0 139.3 80.9 139.5 81.1 16.2 10.1 20.7 36 6.1 52.6L285.7 229l106.1-5.9c18.5-1.1 33.6 14.4 32.1 32.7zm-64.9-154c28.1 0 50.9-22.8 50.9-50.9C409.9 22.8 387.1 0 359 0c-28.1 0-50.9 22.8-50.9 50.9 0 28.1 22.8 50.9 50.9 50.9zM179.6 456.5c-80.6 0-127.4-90.6-82.7-156.1l-39.7-39.7C36.4 287 24 320.3 24 356.4c0 130.7 150.7 201.4 251.4 122.5l-39.7-39.7c-16 10.9-35.3 17.3-56.1 17.3z\"/></svg>';\r\nrobotIcons[\"caret-square-right\"] = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M176 354.9V157.1c0-10.7 13-16.1 20.5-8.5l98.3 98.9c4.7 4.7 4.7 12.2 0 16.9l-98.3 98.9c-7.5 7.7-20.5 2.3-20.5-8.4zM448 80v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"/></svg>';\r\nrobotIcons[\"arrow-alt-circle-right\"] = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M504 256C504 119 393 8 256 8S8 119 8 256s111 248 248 248 248-111 248-248zm-448 0c0-110.5 89.5-200 200-200s200 89.5 200 200-89.5 200-200 200S56 366.5 56 256zm72 20v-40c0-6.6 5.4-12 12-12h116v-67c0-10.7 12.9-16 20.5-8.5l99 99c4.7 4.7 4.7 12.3 0 17l-99 99c-7.6 7.6-20.5 2.2-20.5-8.5v-67H140c-6.6 0-12-5.4-12-12z\"/></svg>';\r\nrobotIcons[\"android\"] = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M89.6 204.5v115.8c0 15.4-12.1 27.7-27.5 27.7-15.3 0-30.1-12.4-30.1-27.7V204.5c0-15.1 14.8-27.5 30.1-27.5 15.1 0 27.5 12.4 27.5 27.5zm10.8 157c0 16.4 13.2 29.6 29.6 29.6h19.9l.3 61.1c0 36.9 55.2 36.6 55.2 0v-61.1h37.2v61.1c0 36.7 55.5 36.8 55.5 0v-61.1h20.2c16.2 0 29.4-13.2 29.4-29.6V182.1H100.4v179.4zm248-189.1H99.3c0-42.8 25.6-80 63.6-99.4l-19.1-35.3c-2.8-4.9 4.3-8 6.7-3.8l19.4 35.6c34.9-15.5 75-14.7 108.3 0L297.5 34c2.5-4.3 9.5-1.1 6.7 3.8L285.1 73c37.7 19.4 63.3 56.6 63.3 99.4zm-170.7-55.5c0-5.7-4.6-10.5-10.5-10.5-5.7 0-10.2 4.8-10.2 10.5s4.6 10.5 10.2 10.5c5.9 0 10.5-4.8 10.5-10.5zm113.4 0c0-5.7-4.6-10.5-10.2-10.5-5.9 0-10.5 4.8-10.5 10.5s4.6 10.5 10.5 10.5c5.6 0 10.2-4.8 10.2-10.5zm94.8 60.1c-15.1 0-27.5 12.1-27.5 27.5v115.8c0 15.4 12.4 27.7 27.5 27.7 15.4 0 30.1-12.4 30.1-27.7V204.5c0-15.4-14.8-27.5-30.1-27.5z\"/></svg>';\r\nrobotIcons[\"grin-tears\"] = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path d=\"M117.1 256.1c-25.8 3.7-84 13.7-100.9 30.6-21.9 21.9-21.5 57.9.9 80.3s58.3 22.8 80.3.9C114.3 351 124.3 292.8 128 267c.8-6.4-4.6-11.8-10.9-10.9zm506.7 30.6c-16.9-16.9-75.1-26.9-100.9-30.6-6.3-.9-11.7 4.5-10.8 10.8 3.7 25.8 13.7 84 30.6 100.9 21.9 21.9 57.9 21.5 80.3-.9 22.3-22.3 22.7-58.3.8-80.2zm-126.6 61.7C463.8 412.3 396.9 456 320 456c-76.9 0-143.8-43.7-177.2-107.6-12.5 37.4-25.2 43.9-28.3 46.5C159.1 460.7 234.5 504 320 504s160.9-43.3 205.5-109.1c-3.2-2.7-15.9-9.2-28.3-46.5zM122.7 224.5C137.9 129.2 220.5 56 320 56c99.5 0 182.1 73.2 197.3 168.5 2.1-.2 5.2-2.4 49.5 7C554.4 106 448.7 8 320 8S85.6 106 73.2 231.4c44.5-9.4 47.1-7.2 49.5-6.9zM320 400c51.9 0 115.3-32.9 123.3-80 1.7-9.9-7.7-18.5-17.7-15.3-25.9 8.3-64.4 13.1-105.6 13.1s-79.6-4.8-105.6-13.1c-9.8-3.1-19.4 5.3-17.7 15.3 8 47.1 71.4 80 123.3 80zm130.3-168.3c3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.6 6.2 4.6 9.3 3.7zM240 189.4c12.3 0 23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.8 19.2-21.6 31.5-21.6z\"/></svg>';\r\n\r\nexport { robotIcons }","\r\nimport { messageBoxView } from \"./messageBox.view.js\";\r\nimport { messageBoxThreadedView } from \"./messageBox.threadedView.js\";\r\nimport { robotView } from \"./robot.view.js\";\r\nimport { robotThreadedView } from \"./robot.threadedView.js\";\r\nimport { worldView } from \"./world.view.js\";\r\nimport { worldThreadedView } from \"./world.threadedView.js\";\r\n\r\nvar viewFactory = {};\r\n\r\nvar views = {};\r\nviews.messageBoxView = messageBoxView;\r\nviews.robotView = robotView;\r\nviews.worldView = worldView;\r\n\r\nviewFactory.loadThreaded = function() {\r\n\r\n\tviews.messageBoxView = messageBoxThreadedView;\r\n\tviews.robotView = robotThreadedView;\r\n\tviews.worldView = worldThreadedView;\r\n}\r\n\r\nviewFactory.getView = function(viewName) {\r\n\r\n\treturn views[viewName];\r\n}\r\n\r\n\r\nexport { viewFactory }","\r\nimport { viewFactory } from \"./viewFactory.js\";\r\nimport { appState } from \"./appState.js\";\r\n\r\nvar worldState = appState.world;\r\n\r\nvar worldController = {};\r\n\r\nworldController.load = function() {\r\n\r\n    var worldView = viewFactory.getView(\"worldView\");\r\n\r\n    worldState.cellSize = worldView.renderGrid(worldState);\r\n};\r\n\r\n\r\nexport { worldController }","\r\n\r\nvar worldThreadedView = {};\r\n\r\nworldThreadedView.renderGrid = function(worldState) {\r\n\r\n\tvar message = {\r\n\t\thandler: \"worldView\",\r\n\t\tmethod: \"renderGrid\",\r\n\t\tparameters: [\r\n\t\t\tworldState\r\n\t\t]\r\n\t}\r\n\r\n\tself.postMessage(message);\r\n}\r\n\r\n\r\nworldThreadedView.putDownTile = function(tileCount, robotState, worldState) {\r\n\r\n\tvar message = {\r\n\t\thandler: \"worldView\",\r\n\t\tmethod: \"putDownTile\",\r\n\t\tparameters: [\r\n\t\t\ttileCount,\r\n\t\t\trobotState,\r\n\t\t\tworldState\r\n\t\t]\r\n\t}\r\n\r\n\tself.postMessage(message);\r\n}\r\n\r\n\r\nworldThreadedView.pickUpTile = function(previousTileCount, robotState, worldState) {\r\n\r\n\tvar message = {\r\n\t\thandler: \"worldView\",\r\n\t\tmethod: \"pickUpTile\",\r\n\t\tparameters: [\r\n\t\t\tpreviousTileCount,\r\n\t\t\trobotState,\r\n\t\t\tworldState\r\n\t\t]\r\n\t}\r\n\r\n\tself.postMessage(message);\r\n}\r\n\r\n\r\nexport { worldThreadedView }","\r\nimport { dom } from \"../lib/core/web/dom.js\";\r\nimport { coreMath } from \"../lib/core/extensions/core-math.js\";\r\nimport { animationView } from \"./animation.view.js\";\r\n\r\nvar worldView = {};\r\n\r\n// Add 1 to account for the table border of 3px\r\nvar worldPlaceholderMargin = 20;\r\nvar worldTableMarginsTotal = (worldPlaceholderMargin + 1) * 2;\r\n\r\nworldView.renderGrid = function(worldState) {\r\n\r\n\tvar cellSize = calculateCellSize(worldState.rowsCount, worldState.columnsCount);\r\n\tvar gridWidth = cellSize * worldState.columnsCount;\r\n\r\n\tvar tableElement = dom.createElement(\"table\", { id: \"kDroidGrid\" });\r\n\ttableElement.style.width = gridWidth + \"px\";\r\n\ttableElement.style.border = \"2px solid \" + worldState.wallBackgroundColor;\r\n\r\n\tvar tableCellElements = [];\r\n\r\n\tfor (var rowIndex = 0; rowIndex < worldState.rowsCount; rowIndex++) {\r\n\r\n\t\tvar rowElement = document.createElement(\"tr\");\r\n\r\n\t\tfor (var columnIndex = 0; columnIndex < worldState.columnsCount; columnIndex++) {\r\n\r\n\t\t\tvar cellId = \"cell-\" + rowIndex + \"-\" + columnIndex;\r\n\t\t\tvar tableCellElement = dom.createElement(\"td\", { id: cellId });\r\n\r\n\t\t\ttableCellElement.style.width = cellSize + \"px\";\r\n\t\t\ttableCellElement.style.backgroundColor = worldState.backgroundColor;\r\n\t\t\ttableCellElement.style.border = \"1px solid \" + worldState.borderBackgroundColor;\r\n\r\n\t\t\trowElement.appendChild(tableCellElement);\r\n\t\t\ttableCellElements.push(tableCellElement);\r\n\t\t}\r\n\r\n\t\ttableElement.appendChild(rowElement);\r\n\t}\r\n\r\n\tvar worldPlaceholderElement = dom.createElement(\"div\", { id: \"worldPlaceholder\" });\r\n\tdocument.body.appendChild(worldPlaceholderElement);\r\n\r\n\tworldPlaceholderElement.style.width = gridWidth + \"px\";\r\n\tworldPlaceholderElement.innerHTML = \"\";\r\n\tworldPlaceholderElement.appendChild(tableElement);\r\n\r\n\ttableCellElements.forEach(function(tableCellElement) {\r\n\r\n\t\ttableCellElement.style.height = tableCellElement.offsetWidth + \"px\";\r\n\t});\r\n\r\n\treturn cellSize;\r\n};\r\n\r\nfunction calculateCellSize(rowsCount, columnsCount) {\r\n\r\n\tvar totalWidth = window.innerWidth / columnsCount;\r\n\tvar totalHeight = window.innerHeight / rowsCount;\r\n\r\n\tvar cellSize = window.innerHeight - worldTableMarginsTotal;\r\n\tvar cellCount = rowsCount;\r\n\r\n\tif (totalWidth < totalHeight) {\r\n\r\n\t\tcellSize = window.innerWidth - worldTableMarginsTotal;\r\n\t\tcellCount = columnsCount;\r\n\t}\r\n\r\n\tcellSize = Math.floor(cellSize / cellCount);\r\n\r\n\treturn cellSize;\r\n}\r\n\r\nworldView.putDownTile = function(tileCount, robotState, worldState) {\r\n\r\n\tvar tileId = \"tile-\" + robotState.rowIndex + \"-\" + robotState.columnIndex + \"-\" + tileCount;\r\n\tvar tileElement = dom.createElement(\"div\", { id: tileId, className: \"tile\" });\r\n\tvar tileWidth = coreMath.pathagorinC(worldState.cellSize, worldState.cellSize);\r\n\r\n\ttileElement.style.top = (worldState.cellSize / 2) - (tileWidth / 2) + \"px\";\r\n\ttileElement.style.left = (worldState.cellSize / 2) - (tileWidth / 2) + \"px\";\r\n\ttileElement.style.width = tileWidth + \"px\";\r\n\ttileElement.style.height = tileWidth + \"px\";\r\n\ttileElement.style.lineHeight = tileWidth + \"px\";\r\n\ttileElement.style.fontSize = (tileWidth * .4) + \"px\";\r\n\ttileElement.style.color = worldState.tileColor;\t\r\n\ttileElement.style.background = worldState.tileBackgroundColor;\r\n\ttileElement.style.visibility = \"hidden\";\r\n\r\n\tif (tileCount > 1) {\r\n\r\n\t\ttileElement.innerHTML = tileCount;\r\n\t}\r\n\r\n\tvar targetCellId = \"cell-\" + robotState.rowIndex + \"-\" + robotState.columnIndex;\r\n\tvar targetCellElement = dom(\"#\" +targetCellId);\r\n\r\n\ttargetCellElement.appendChild(tileElement);\r\n\t\r\n\tvar keyframes = [\r\n\t\t{transform: \"scale(0)\", visibility: \"visible\"},\r\n\t\t{transform: \"scale(1)\", visibility: \"visible\"}\r\n\t]\r\n\r\n    var options = {\r\n        duration: worldState.duration / 2,\r\n\t\teasing: \"linear\"\r\n\t}\r\n\r\n    animationView.stackAnimation(tileElement, keyframes, options, function() {\r\n\r\n\t\ttileElement.style.visibility = \"visible\";\r\n    });\r\n}\r\n\r\nworldView.pickUpTile = function(previousTileCount, robotState, worldState) {\r\n\r\n\tvar tileId = \"tile-\" + robotState.rowIndex + \"-\" + robotState.columnIndex + \"-\" + previousTileCount;\r\n\tvar tileElement = dom(\"#\" + tileId);\r\n\r\n\tvar targetCellId = \"cell-\" + robotState.rowIndex + \"-\" + robotState.columnIndex;\r\n\tvar targetCellElement = dom(\"#\" + targetCellId);\r\n\t\r\n\tvar keyframes = [\r\n\t\t{transform: \"scale(1)\", visibility: \"visible\"},\r\n\t\t{transform: \"scale(0)\", visibility: \"visible\"}\r\n\t]\r\n\r\n    var options = {\r\n        duration: worldState.duration / 2,\r\n\t\teasing: \"linear\"\r\n\t}\r\n\r\n    animationView.stackAnimation(tileElement, keyframes, options, function() {\r\n\r\n\t\ttargetCellElement.removeChild(tileElement);\r\n    });\r\n}\r\n\r\n\r\nexport { worldView }","\r\nimport { appController } from \"./app/app.controller.js\";\r\nimport { robotController } from \"./app/robot.controller.js\";\r\n\r\n/***\r\n * For use with a web worker as in imported script.\r\n * Must be webpacked to remove all ES6 imports.\r\n */\r\n\r\nself.setWorldSize = appController.setWorldStateSize.bind(appController);\r\nself.setRandomWorldSize = appController.setRandomWorldStateSize.bind(appController);\r\nself.setWorldSpeed = appController.setWorldStateSpeed.bind(appController);\r\nself.setRobotIcon = appController.setRobotStateIconName.bind(appController);\r\nself.setRandomRobotIcon = appController.setRandomRobotStateIconName.bind(appController);\r\nself.setRobotDirection = appController.setRobotStateDirection.bind(appController);\r\nself.setRandomRobotDirection = appController.setRandomRobotStateDirection.bind(appController);\r\nself.setTileColor = appController.setTileBackgroundColor.bind(appController);\r\nself.loadWorld = appController.loadThreaded.bind(appController);\r\n\r\nself.move = robotController.move.bind(robotController);\r\nself.isFrontClear = robotController.isFrontClear.bind(robotController);\r\nself.isFrontBlocked = robotController.isFrontBlocked.bind(robotController);\r\nself.turnLeft = robotController.turnLeft.bind(robotController);\r\n\r\nself.putDownTile = robotController.putDownTile.bind(robotController);\r\nself.pickUpTile = robotController.pickUpTile.bind(robotController);\r\nself.isOnTile = robotController.isOnTile.bind(robotController);\r\nself.isNotOnTile = robotController.isNotOnTile.bind(robotController);","\r\nvar webAnimationExtensions = {};\r\n\r\nvar nullTransformKeyframes = {\r\n\ttransform: [\"none\", \"none\"]\r\n};\r\nvar nullDurationOptions = {\r\n\tduration: 1\r\n};\r\n\r\nwebAnimationExtensions.getTimelineCurrentTime = function(callback) {\r\n\r\n\tdocument.body.animate(nullTransformKeyframes, nullDurationOptions).onfinish = function() {\r\n\r\n\t\tcallback(document.timeline.currentTime);\r\n\t}\r\n}\r\n\r\n\r\nexport { webAnimationExtensions }","\r\nfunction DoubleKeyHashSet(separater) {\r\n\r\n\tthis.separater = \"-\";\r\n\r\n\tif (separater) {\r\n\r\n\t\tthis.separater = separater.toString();\r\n\t}\r\n}\r\n\r\nDoubleKeyHashSet.prototype.add = function(keyLeft, keyRight) {\r\n\r\n\tvar key = getKey(keyLeft, keyRight);\r\n\r\n\tthis[key] = null;\r\n}\r\n\r\nDoubleKeyHashSet.prototype.remove = function(keyLeft, keyRight) {\r\n\r\n\tvar key = getKey(keyLeft, keyRight);\r\n\r\n\tdelete this[key];\r\n}\r\n\r\nDoubleKeyHashSet.prototype.includesKey = function(keyLeft, keyRight) {\r\n\r\n\tvar key = getKey(keyLeft, keyRight);\r\n\r\n\treturn this.hasOwnProperty(key);\r\n}\r\n\r\nfunction getKey(keyLeft, keyRight) {\r\n\r\n\treturn keyLeft + \"-\" + keyRight;\r\n}\r\n\r\n\r\nexport { DoubleKeyHashSet };","\r\nvar coreMath = {};\r\n\r\ncoreMath.randomBoolean = function(percent) {\r\n\r\n\treturn Math.random() >= .5;\r\n};\r\n\r\ncoreMath.randomBooleanForPercent = function(percent) {\r\n\r\n\treturn Math.random() < percent / 100;\r\n};\r\n\r\n/** The min and max numbers are included in the possible numbers. */\r\ncoreMath.randomInteger = function(min, max) {\r\n\t\r\n\tmin = Math.ceil(min);\r\n\tmax = Math.floor(max) + 1;\r\n\r\n\treturn Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\ncoreMath.pathagorinC = function(a, b) {\r\n\r\n\treturn Math.sqrt((a * a) + (b * b));\r\n}\r\n\r\nexport { coreMath }","\r\nvar coreObject = {}\r\n\r\ncoreObject.toArray = function(object) {\r\n\r\n\tvar values = [];\r\n\tvar keys = Object.keys(object);\r\n\r\n\tfor (var index in keys) {\r\n\r\n\t\tvar key = keys[index];\r\n\t\tvar value = object[key];\r\n\r\n\t\tvalues.push(value);\r\n\t}\r\n\r\n\treturn values;\r\n}\r\n\r\ncoreObject.forEach = function(object, callback) {\r\n\r\n\tObject.keys(object).forEach(function(key) {\r\n\r\n\t\tvar value = object[key];\r\n\r\n\t\tcallback(key, value);\r\n\r\n\t});\r\n}\r\n\r\n\r\nexport { coreObject }","var coreString = {};\r\n\r\ncoreString.addNumberInString = function(string, number) {\r\n\r\n\tvar result = string.replace(/\\d+/, function(value) {\r\n\r\n\t\tvar parsedNumber = parseFloat(value);\r\n\r\n\t\tif (!isNaN(parsedNumber)) {\r\n\r\n\t\t\tvalue = parsedNumber + number;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t});\r\n\r\n\treturn result;\r\n}\r\n\r\n\r\nexport { coreString }","\r\nimport { coreObject } from \"../extensions/core-object.js\"\r\n\r\nvar dom = function(query, sourceElement) {\r\n\r\n\tvar queryElement = (sourceElement) ? sourceElement : document;\r\n\r\n\tvar elements = queryElement.querySelectorAll(query);\r\n\r\n\tif (elements.length == 0) {\r\n\r\n\t\telements = null;\r\n\r\n\t} else if (elements.length === 1) {\r\n\r\n\t\telements = elements[0];\r\n\t}\r\n\r\n\treturn elements;\r\n};\r\n\r\ndom.createElement = function(tagName, elementProperties, children) {\r\n\r\n\tvar element = document.createElement(tagName);\r\n\r\n\tif (elementProperties) {\r\n\r\n\t\tcoreObject.forEach(elementProperties, function(key, value) {\r\n\r\n\t\t\telement[key] = value;\r\n\t\t});\r\n\t}\r\n\r\n\tif (children) {\r\n\r\n\t\tchildren.forEach(function(child) {\r\n\r\n\t\t\telement.appendChild(child);\r\n\t\t});\r\n\t}\r\n\r\n\treturn element\r\n}\r\n\r\ndom.appendHtml = function(element, html) {\r\n\r\n\tvar template = document.createElement(\"template\");\r\n\ttemplate.innerHTML = html;\r\n\r\n\telement.appendChild(template.content);\r\n}\r\n\r\ndom.appendScript = function(src, callback) {\r\n\r\n\tvar scriptElement = dom.createElement(\"script\", { src: src });\r\n\r\n\tscriptElement.addEventListener(\"load\", function() {\r\n\r\n\t\tcallback();\r\n\t});\r\n\r\n\tdocument.body.appendChild(scriptElement);\r\n}\r\n\r\ndom.getFormData = function(htmlFormElement) {\r\n\r\n\tvar data = {};\r\n\r\n\tif (htmlFormElement && htmlFormElement.elements) {\r\n\r\n\t\tvar elements = htmlFormElement.elements;\r\n\r\n\t\tfor (var index = 0; index < elements.length; index++) {\r\n\r\n\t\t\tvar element = elements[index];\r\n\r\n\t\t\tif (element.name) {\r\n\r\n\t\t\t\tvar value = this.getFormDataValue(element);\r\n\r\n\t\t\t\tif (value !== null) {\r\n\r\n\t\t\t\t\tdata[element.name] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn data;\r\n};\r\n\r\ndom.getFormDataValue = function(element) {\r\n\r\n\tvar value = element.value;\r\n\r\n\tif (element.nodeName === \"INPUT\") {\r\n\r\n\t\tif (element.type === \"radio\") {\r\n\r\n\t\t\tvalue = (element.checked) ? element.value : null;\r\n\r\n\t\t} else if (element.type === \"checkbox\") {\r\n\r\n\t\t\tvalue = element.checked;\r\n\t\t}\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\ndom.getRadioValue = function(htmlCollection) {\r\n\r\n\tvar value = null;\r\n\r\n\tif (htmlCollection) {\r\n\r\n\t\tfor (var index = 0; index < htmlCollection.length; index++) {\r\n\r\n\t\t\tvar element = htmlCollection[index];\r\n\r\n\t\t\tif (element.checked) {\r\n\r\n\t\t\t\tvalue = element.value;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\ndom.setRadioValue = function(htmlCollection, value) {\r\n\r\n\tif (htmlCollection) {\r\n\r\n\t\tfor (var index = 0; index < htmlCollection.length; index++) {\r\n\r\n\t\t\tvar element = htmlCollection[index];\r\n\r\n\t\t\tif (element.value === value) {\r\n\r\n\t\t\t\telement.checked = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport { dom }"],"sourceRoot":""}